org: jbkamp
app: aura-serverless
service: aura-serverless
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  # httpApi:
  #   authorizers:
  #     customAuthorizer:
  #       type: request
  #       functionName: authorizerFunc

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
          # authorizer:
          #   name: customAuthorizer

  createClient:
    handler: db/clients.addClient
    events:
      - httpApi:
          path: /client
          method: post
          # authorizer:
          #   name: customAuthorizer

  createUser:
    handler: db/users.addUser
    events:
      - httpApi:
          path: /user
          method: post
          # authorizer:
          #   name: customAuthorizer

  createDevice:
    handler: db/devices.addDevice
    events:
      - httpApi:
          path: /device
          method: post
          # authorizer:
          #   name: customAuthorizer

  createPanicType:
    handler: db/panics.addPanicType
    events:
      - httpApi:
          path: /panictype
          method: post
          # authorizer:
          #   name: customAuthorizer

  insertPanic:
    handler: db/panics.addPanic
    events:
      - httpApi:
          path: /panic
          method: post
          # authorizer:
          #   name: customAuthorizer

  getAllPanics:
    handler: db/panics.getAllPanics
    events:
      - httpApi:
          path: /panic
          method: get
          # authorizer:
          #   name: customAuthorizer

  # authorizerFunc:
  #   handler: authorizer.handler

plugins:
  - serverless-offline
